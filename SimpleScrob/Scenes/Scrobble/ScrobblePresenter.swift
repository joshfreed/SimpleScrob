//
//  ScrobblePresenter.swift
//  SimpleScrob
//
//  Created by Josh Freed on 9/30/17.
//  Copyright (c) 2017 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ScrobblePresentationLogic {
    func presentAuthorizationPrimer()
    func presentAuthorizationDenied()
    func presentScanningMusicLibrary()
    func presentLibraryScanComplete(response: Scrobble.Refresh.Response)
    func presentSearchingForNewScrobbles()
    func presentSongsToScrobble(response: Scrobble.Refresh.Response)
}

class ScrobblePresenter: ScrobblePresentationLogic {
    weak var viewController: ScrobbleDisplayLogic?

    // MARK: Refresh

    func presentAuthorizationPrimer() {
        viewController?.displayAuthorizationPrimer()
    }
    
    func presentAuthorizationDenied() {
        viewController?.displayAuthorizationDenied()
    }
    
    func presentScanningMusicLibrary() {
        viewController?.displayScanningMusicLibrary()
    }
    
    func presentLibraryScanComplete(response: Scrobble.Refresh.Response) {
        let viewModel = Scrobble.Refresh.ViewModel(currentUserName: currentUserText(currentUserName: response.currentUserName))
        viewController?.displayLibraryScanComplete(viewModel: viewModel)
    }
    
    func presentSearchingForNewScrobbles() {
        viewController?.displaySearchingForNewScrobbles()
    }
    
    func presentSongsToScrobble(response: Scrobble.Refresh.Response) {
        
    }

    // MARK: Helpers
    
    private func currentUserText(currentUserName: String?) -> String? {
        guard let currentUserName = currentUserName else {
            return nil
        }
        
        return "Signed in as \(currentUserName)"
    }
}
