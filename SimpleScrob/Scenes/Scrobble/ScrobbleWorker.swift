//
//  ScrobbleWorker.swift
//  SimpleScrob
//
//  Created by Josh Freed on 9/30/17.
//  Copyright (c) 2017 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import JFLib
import CocoaLumberjack

class ScrobbleWorker {
    let database: Database
    let songScanner: SongScanner    
    let scrobbleService: ScrobbleService
    
    var currentUserName: String? {
        return scrobbleService.currentUserName
    }
    
    var isLoggedIn: Bool {
        return scrobbleService.isLoggedIn
    }
    
    var isFirstTime: Bool {
        return !songScanner.isInitialized
    }
    
    init(
        database: Database,
        songScanner: SongScanner,        
        scrobbleService: ScrobbleService
    ) {
        self.database = database
        self.songScanner = songScanner        
        self.scrobbleService = scrobbleService
    }

    func signOut() {
        scrobbleService.signOut()
    }
    
    func initializeMusicLibrary() {
        songScanner.initializeSongDatabase()
    }
    
    func searchForNewSongsToScrobble(completion: @escaping ([PlayedSong]) -> ()) {
        DispatchQueue.global(qos: .background).async {
            let playedSongs: [PlayedSong] = self.songScanner.searchForNewScrobbles()

            DDLogDebug("Found \(playedSongs.count) played songs")
            
            self.database.insert(playedSongs: playedSongs) {
                self.database.findUnscrobbledSongs { playedSongs in
                    DispatchQueue.main.async {
                        completion(playedSongs)
                    }
                }
            }
        }
    }

    func submit(songs: [PlayedSong], completion: @escaping (Error?) -> ()) {
        delay(seconds: 0.5) {
            self.scrobbleService.scrobble(songs: songs) { updatedSongs, error in
                self.database.save(playedSongs: updatedSongs, completion: {})
                completion(error)
            }
        }
    }
}
